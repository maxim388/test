[{"E:\\Work\\Programming\\Training\\React_1.0\\test-app\\src\\App.js":"1","E:\\Work\\Programming\\Training\\React_1.0\\test-app\\src\\components\\Settings\\Settings.jsx":"2","E:\\Work\\Programming\\Training\\React_1.0\\test-app\\src\\components\\Settings\\AddUsersForm\\AddUsersForm.jsx":"3","E:\\Work\\Programming\\Training\\React_1.0\\test-app\\src\\store\\reducers\\usersReducer.js":"4","E:\\Work\\Programming\\Training\\React_1.0\\test-app\\src\\store\\store.js":"5","E:\\Work\\Programming\\Training\\React_1.0\\test-app\\src\\components\\AuthUserState\\AuthUserState.jsx":"6","E:\\Work\\Programming\\Training\\React_1.0\\test-app\\src\\components\\HOC\\withAuthRedirect.jsx":"7","E:\\Work\\Programming\\Training\\React_1.0\\test-app\\src\\index.js":"8","E:\\Work\\Programming\\Training\\React_1.0\\test-app\\src\\reportWebVitals.js":"9","E:\\Work\\Programming\\Training\\React_1.0\\test-app\\src\\components\\LoginForm\\LoginForm.jsx":"10","E:\\Work\\Programming\\Training\\React_1.0\\test-app\\src\\components\\DropdawnUsers\\DropdawnUsers.jsx":"11","E:\\Work\\Programming\\Training\\React_1.0\\test-app\\src\\store\\reducers\\authReducer.js":"12","E:\\Work\\Programming\\Training\\React_1.0\\test-app\\src\\api\\api.js":"13","E:\\Work\\Programming\\Training\\React_1.0\\test-app\\src\\store\\reducers\\workWithAPIReducer.js":"14","E:\\Work\\Programming\\Training\\React_1.0\\test-app\\src\\store\\reducers\\workWithAPISelector.js":"15","E:\\Work\\Programming\\Training\\React_1.0\\test-app\\src\\components\\Preloader\\Preloader.jsx":"16","E:\\Work\\Programming\\Training\\React_1.0\\test-app\\src\\components\\CardsAPI\\CardsAPI.jsx":"17","E:\\Work\\Programming\\Training\\React_1.0\\test-app\\src\\components\\CardsAPI\\SubCard\\SubCard.jsx":"18","E:\\Work\\Programming\\Training\\React_1.0\\test-app\\src\\components\\Auxiliary\\Auxiliary.jsx":"19","E:\\Work\\Programming\\Training\\React_1.0\\test-app\\src\\components\\Home\\Home.jsx":"20","E:\\Work\\Programming\\Training\\React_1.0\\test-app\\src\\components\\User\\User.jsx":"21"},{"size":3798,"mtime":1610312207875,"results":"22","hashOfConfig":"23"},{"size":1215,"mtime":1610319124089,"results":"24","hashOfConfig":"23"},{"size":8578,"mtime":1610196030338,"results":"25","hashOfConfig":"23"},{"size":1877,"mtime":1610296267789,"results":"26","hashOfConfig":"23"},{"size":663,"mtime":1610277129930,"results":"27","hashOfConfig":"23"},{"size":1154,"mtime":1610216862898,"results":"28","hashOfConfig":"23"},{"size":459,"mtime":1610007569416,"results":"29","hashOfConfig":"23"},{"size":753,"mtime":1609941446566,"results":"30","hashOfConfig":"23"},{"size":362,"mtime":1609008426016,"results":"31","hashOfConfig":"23"},{"size":2371,"mtime":1610296303648,"results":"32","hashOfConfig":"23"},{"size":1532,"mtime":1610313387351,"results":"33","hashOfConfig":"23"},{"size":1109,"mtime":1610216861177,"results":"34","hashOfConfig":"23"},{"size":970,"mtime":1610314425095,"results":"35","hashOfConfig":"23"},{"size":2723,"mtime":1610319000305,"results":"36","hashOfConfig":"23"},{"size":1178,"mtime":1610309621458,"results":"37","hashOfConfig":"23"},{"size":184,"mtime":1610280096559,"results":"38","hashOfConfig":"23"},{"size":1020,"mtime":1610317808181,"results":"39","hashOfConfig":"23"},{"size":703,"mtime":1610316030112,"results":"40","hashOfConfig":"23"},{"size":1037,"mtime":1610319042282,"results":"41","hashOfConfig":"23"},{"size":2761,"mtime":1610319514278,"results":"42","hashOfConfig":"23"},{"size":1141,"mtime":1610319226714,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1v8sv5z",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},"E:\\Work\\Programming\\Training\\React_1.0\\test-app\\src\\App.js",[],"E:\\Work\\Programming\\Training\\React_1.0\\test-app\\src\\components\\Settings\\Settings.jsx",[],"E:\\Work\\Programming\\Training\\React_1.0\\test-app\\src\\components\\Settings\\AddUsersForm\\AddUsersForm.jsx",["91","92","93","94","95"],"import \"./AddUsersForm.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Form, Input, InputNumber, Button } from \"antd\";\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 8,\r\n    },\r\n    wrapperCol: {\r\n        span: 8,\r\n    },\r\n};\r\n\r\nconst validateMessages = {\r\n    required: \"${label} is required!\",\r\n    types: {\r\n        email: \"${label} is not a valid email!\",\r\n        number: \"${label} is not a valid number!\",\r\n    },\r\n    number: {\r\n        range: \"${label} must be between ${min} and ${max}\",\r\n    },\r\n};\r\n\r\nconst AddUsersForm = React.memo((props) => {\r\n    const [form] = Form.useForm();\r\n\r\n    const [fullName, setFullName] = useState(props.user.fullName);\r\n    const [email, setEmail] = useState(props.user.email);\r\n    const [age, setAge] = useState(props.user.age);\r\n    const [aboutMeSelf, setAboutMeSelf] = useState(props.user.aboutMeSelf);\r\n\r\n    useEffect(() => {\r\n        let promise = new Promise((resolve) => {\r\n            setFullName(props.user.fullName);\r\n            setEmail(props.user.email);\r\n            setAge(props.user.age);\r\n            setAboutMeSelf(props.user.aboutMeSelf);\r\n            resolve();\r\n        });\r\n        promise.then(() => {\r\n            form.resetFields();\r\n        });\r\n    }, [props.user]);\r\n\r\n    // useEffect(() => {\r\n    //     form.resetFields();\r\n    // }, [props.id]);\r\n\r\n    const submitSubForm = (values) => {\r\n        props.updateSubUsersThunk(values, props.id);\r\n        // props.updateUsersCreator(values, props.id);\r\n        form.resetFields();\r\n        closeUser();\r\n    };\r\n\r\n    const closeUser = () => {\r\n        props.push(\"/settings/\");\r\n    };\r\n\r\n    // const updateFullName = () => {};\r\n    return (\r\n        <Form\r\n            form={form}\r\n            {...layout}\r\n            name=\"nest-messages\"\r\n            onFinish={submitSubForm}\r\n            validateMessages={validateMessages}\r\n            initialValues={{\r\n                fullName: fullName,\r\n                email: email,\r\n                age: age,\r\n                aboutMeSelf: aboutMeSelf,\r\n            }}\r\n        >\r\n            <Form.Item\r\n                name={\"fullName\"}\r\n                label=\"Fullname\"\r\n                // onChange={(e) => setFullName(e.currentTarget.value)}\r\n                // onBlur={updateFullName}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                    },\r\n                ]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name={\"email\"}\r\n                label=\"Email\"\r\n                // onChange={(e) => setEmail(e.currentTarget.value)}\r\n                rules={[\r\n                    {\r\n                        type: \"email\",\r\n                    },\r\n                ]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name={\"age\"}\r\n                label=\"Age\"\r\n                // onBlur={(e) => setAge(e.currentTarget.value)}\r\n                rules={[\r\n                    {\r\n                        type: \"number\",\r\n                        min: 0,\r\n                        max: 140,\r\n                    },\r\n                ]}\r\n            >\r\n                <InputNumber />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name={\"aboutMeSelf\"}\r\n                label=\"About myself\"\r\n                // onChange={(e) => setAboutMeSelf(e.currentTarget.value)}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                    },\r\n                ]}\r\n            >\r\n                <Input.TextArea />\r\n            </Form.Item>\r\n            <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n                {fullName ? (\r\n                    <>\r\n                        <Button type=\"default\" htmlType=\"submit\">\r\n                            Edit User\r\n                        </Button>\r\n                        <Button type=\"danger\" onClick={closeUser}>\r\n                            Close User\r\n                        </Button>\r\n                    </>\r\n                ) : (\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Add User\r\n                    </Button>\r\n                )}\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n});\r\nexport default AddUsersForm;\r\n\r\n// const AddUsersForm = (props) => {\r\n//     // handleSubmit = (e) => {\r\n//     //     e.preventDefault();\r\n//     //     this.props.form.validateFields((err, values) => {\r\n//     //         if (!err) {\r\n//     //             console.log(\"Received values of form: \", values);\r\n//     //         }\r\n//     //     });\r\n//     // };\r\n//     // normFile = (e) => {\r\n//     //     console.log(\"Upload event:\", e);\r\n//     //     if (Array.isArray(e)) {\r\n//     //         return e;\r\n//     //     }\r\n//     //     return e && e.fileList;\r\n//     // };\r\n//     // render() {\r\n//     const { getFieldDecorator } = props.form;\r\n//     const formItemLayout = {\r\n//         labelCol: { span: 6 },\r\n//         wrapperCol: { span: 14 },\r\n//     };\r\n//     return (\r\n//         <Form >\r\n//             <FormItem {...formItemLayout} label=\"Plain Text\">\r\n//                 <span className=\"ant-form-text\">China</span>\r\n//             </FormItem>\r\n//             <FormItem {...formItemLayout} label=\"Select\" hasFeedback>\r\n//                 {getFieldDecorator(\"select\", {\r\n//                     rules: [\r\n//                         {\r\n//                             required: true,\r\n//                             message: \"Please select your country!\",\r\n//                         },\r\n//                     ],\r\n//                 })(\r\n//                     <Select placeholder=\"Please select a country\">\r\n//                         <Option value=\"china\">China</Option>\r\n//                         <Option value=\"use\">U.S.A</Option>\r\n//                     </Select>\r\n//                 )}\r\n//             </FormItem>\r\n\r\n//             <FormItem {...formItemLayout} label=\"Select[multiple]\">\r\n//                 {getFieldDecorator(\"select-multiple\", {\r\n//                     rules: [\r\n//                         {\r\n//                             required: true,\r\n//                             message: \"Please select your favourite colors!\",\r\n//                             type: \"array\",\r\n//                         },\r\n//                     ],\r\n//                 })(\r\n//                     <Select\r\n//                         mode=\"multiple\"\r\n//                         placeholder=\"Please select favourite colors\"\r\n//                     >\r\n//                         <Option value=\"red\">Red</Option>\r\n//                         <Option value=\"green\">Green</Option>\r\n//                         <Option value=\"blue\">Blue</Option>\r\n//                     </Select>\r\n//                 )}\r\n//             </FormItem>\r\n\r\n//             <FormItem {...formItemLayout} label=\"InputNumber\">\r\n//                 {getFieldDecorator(\"input-number\", { initialValue: 3 })(\r\n//                     <InputNumber min={1} max={10} />\r\n//                 )}\r\n//                 <span className=\"ant-form-text\"> machines</span>\r\n//             </FormItem>\r\n\r\n//             <FormItem {...formItemLayout} label=\"Switch\">\r\n//                 {getFieldDecorator(\"switch\", { valuePropName: \"checked\" })(\r\n//                     <Switch />\r\n//                 )}\r\n//             </FormItem>\r\n\r\n//             <FormItem {...formItemLayout} label=\"Radio.Group\">\r\n//                 {getFieldDecorator(\"radio-group\")(\r\n//                     <RadioGroup>\r\n//                         <Radio value=\"a\">item 1</Radio>\r\n//                         <Radio value=\"b\">item 2</Radio>\r\n//                         <Radio value=\"c\">item 3</Radio>\r\n//                     </RadioGroup>\r\n//                 )}\r\n//             </FormItem>\r\n\r\n//             <FormItem {...formItemLayout} label=\"Radio.Button\">\r\n//                 {getFieldDecorator(\"radio-button\")(\r\n//                     <RadioGroup>\r\n//                         <RadioButton value=\"a\">item 1</RadioButton>\r\n//                         <RadioButton value=\"b\">item 2</RadioButton>\r\n//                         <RadioButton value=\"c\">item 3</RadioButton>\r\n//                     </RadioGroup>\r\n//                 )}\r\n//             </FormItem>\r\n\r\n//                 <FormItem wrapperCol={{ span: 12, offset: 6 }}>\r\n//                 <Button type=\"primary\" htmlType=\"submit\">\r\n//                     Submit\r\n//                 </Button>\r\n//             </FormItem>\r\n//         </Form>\r\n//     );\r\n// };\r\n","E:\\Work\\Programming\\Training\\React_1.0\\test-app\\src\\store\\reducers\\usersReducer.js",[],"E:\\Work\\Programming\\Training\\React_1.0\\test-app\\src\\store\\store.js",[],"E:\\Work\\Programming\\Training\\React_1.0\\test-app\\src\\components\\AuthUserState\\AuthUserState.jsx",[],["96","97"],"E:\\Work\\Programming\\Training\\React_1.0\\test-app\\src\\components\\HOC\\withAuthRedirect.jsx",[],["98","99"],"E:\\Work\\Programming\\Training\\React_1.0\\test-app\\src\\index.js",[],["100","101"],"E:\\Work\\Programming\\Training\\React_1.0\\test-app\\src\\reportWebVitals.js",[],"E:\\Work\\Programming\\Training\\React_1.0\\test-app\\src\\components\\LoginForm\\LoginForm.jsx",[],"E:\\Work\\Programming\\Training\\React_1.0\\test-app\\src\\components\\DropdawnUsers\\DropdawnUsers.jsx",["102","103"],"E:\\Work\\Programming\\Training\\React_1.0\\test-app\\src\\store\\reducers\\authReducer.js",[],"E:\\Work\\Programming\\Training\\React_1.0\\test-app\\src\\api\\api.js",[],"E:\\Work\\Programming\\Training\\React_1.0\\test-app\\src\\store\\reducers\\workWithAPIReducer.js",[],"E:\\Work\\Programming\\Training\\React_1.0\\test-app\\src\\store\\reducers\\workWithAPISelector.js",["104"],"E:\\Work\\Programming\\Training\\React_1.0\\test-app\\src\\components\\Preloader\\Preloader.jsx",[],"E:\\Work\\Programming\\Training\\React_1.0\\test-app\\src\\components\\CardsAPI\\CardsAPI.jsx",[],"E:\\Work\\Programming\\Training\\React_1.0\\test-app\\src\\components\\CardsAPI\\SubCard\\SubCard.jsx",[],"E:\\Work\\Programming\\Training\\React_1.0\\test-app\\src\\components\\Auxiliary\\Auxiliary.jsx",[],"E:\\Work\\Programming\\Training\\React_1.0\\test-app\\src\\components\\Home\\Home.jsx",[],"E:\\Work\\Programming\\Training\\React_1.0\\test-app\\src\\components\\User\\User.jsx",["105"],"import { Card } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport ava from \"../../img/ava.jpg\";\r\n\r\nconst User = (props) => {\r\n    let key = props.match.params.key;\r\n    let user = props.users[key];\r\n    let nameField = {\r\n        fullName: \"Fullname\",\r\n        email: \"Email\",\r\n        age: \"Age\",\r\n        aboutMeSelf: \"About myself\",\r\n    };\r\n    return (\r\n        <>\r\n            <Card\r\n                hoverable\r\n                style={{ width: 240 }}\r\n                cover={<img alt=\"example\" src={ava} />}\r\n            >\r\n                {Object.keys(user).map((k) => {\r\n                    if (!user[k]) return;\r\n                    return (\r\n                        <p key={k.toString()}>\r\n                            {nameField[k]}: {user[k]}\r\n                        </p>\r\n                    );\r\n                })}\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: state.subUsers.users,\r\n    };\r\n};\r\n\r\nexport default compose(connect(mapStateToProps), withRouter)(User);\r\n",{"ruleId":"106","severity":1,"message":"107","line":15,"column":15,"nodeType":"108","messageId":"109","endLine":15,"endColumn":38},{"ruleId":"106","severity":1,"message":"107","line":17,"column":16,"nodeType":"108","messageId":"109","endLine":17,"endColumn":48},{"ruleId":"106","severity":1,"message":"107","line":18,"column":17,"nodeType":"108","messageId":"109","endLine":18,"endColumn":50},{"ruleId":"106","severity":1,"message":"107","line":21,"column":16,"nodeType":"108","messageId":"109","endLine":21,"endColumn":60},{"ruleId":"110","severity":1,"message":"111","line":44,"column":8,"nodeType":"112","endLine":44,"endColumn":20,"suggestions":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"114","replacedBy":"118"},{"ruleId":"116","replacedBy":"119"},{"ruleId":"114","replacedBy":"120"},{"ruleId":"116","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":7,"column":18,"nodeType":"124","messageId":"125","endLine":7,"endColumn":25},{"ruleId":"126","severity":1,"message":"127","line":37,"column":13,"nodeType":"128","endLine":42,"endColumn":14},{"ruleId":"122","severity":1,"message":"129","line":1,"column":10,"nodeType":"124","messageId":"125","endLine":1,"endColumn":24},{"ruleId":"130","severity":1,"message":"131","line":24,"column":35,"nodeType":"132","messageId":"133","endLine":24,"endColumn":42},"no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'form'. Either include it or remove the dependency array.","ArrayExpression",["134"],"no-native-reassign",["135"],"no-negated-in-lhs",["136"],["135"],["136"],["135"],["136"],"no-unused-vars","'setName' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'createSelector' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue",{"desc":"137","fix":"138"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [form, props.user]",{"range":"139","text":"140"},[1252,1264],"[form, props.user]"]